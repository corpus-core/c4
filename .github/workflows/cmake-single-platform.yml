# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build and Upload Artifacts

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up CMake
      uses: lukka/get-cmake@v3

    - name: Configure CMake
      run: cmake -S . -B build

    - name: Build
      run: cmake --build build --config Release

    - name: Upload Binaries
      uses: actions/upload-artifact@v3
      with:
        name: linux-binaries
        path: build/bin/

  build-macos-arm64:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up CMake
      uses: lukka/get-cmake@v3

    - name: Configure CMake for ARM64
      run: cmake -S . -B build -DCMAKE_OSX_ARCHITECTURES=arm64

    - name: Build
      run: cmake --build build --config Release

    - name: Upload Binaries
      uses: actions/upload-artifact@v3
      with:
        name: macos-arm64-binaries
        path: build/bin/

#    - name: Test
#      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C ${{env.BUILD_TYPE}}


