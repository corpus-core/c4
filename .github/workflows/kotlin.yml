name: CI Pipeline

on:
  push:
    branches: ["main", "dev", "gradle1"]
  pull_request:
    branches: ["main", "dev", "gradle1"]

jobs:
  generate-java-sources:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Install SWIG
        run: sudo apt-get update && sudo apt-get install -y swig

      - name: Install CMake
        run: sudo apt-get install -y cmake

      - name: Configure CMake
        run: cmake -S . -B build -DGENERATE_JAVA_SOURCES=ON -DCMAKE_BUILD_TYPE=Release -DCURL=false -DKOTLIN=true -DTEST=false -DWASM=false -DCLI=false

      - name: Build
        run: cmake --build build --target c4_java

      - name: Copy generated Java sources
        run: mkdir -p bindings/kotlin/generated/java && cp -r build/bindings/kotlin/java/com/corpuscore/colibri bindings/kotlin/generated/java/

      - name: Upload generated Java sources
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: generated-java-sources
          path: bindings/kotlin/generated/java

  build-native-macos:
    runs-on: macos-latest
    needs: generate-java-sources
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install CMake
        run: brew install cmake

      - name: Configure CMake
        run: cmake -S . -B build-macos -DGENERATE_JAVA_SOURCES=OFF -DCMAKE_BUILD_TYPE=Release  -DCURL=false -DKOTLIN=true -DTEST=false -DWASM=false -DCLI=false

      - name: Build
        run: cmake --build build-macos --target c4_java

      - name: Create native-libs directory
        run: mkdir -p bindings/kotlin/native-libs/darwin-aarch64

      - name: Copy library
        run: cp build-macos/bindings/kotlin/libc4_java.dylib bindings/kotlin/native-libs/darwin-aarch64/libc4_java.jnilib

      - name: Upload native-libs
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: native-libs-macos
          path: bindings/kotlin/native-libs/

  build-native-windows:
    runs-on: windows-latest
    needs: generate-java-sources
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -S . -B build-windows -DGENERATE_JAVA_SOURCES=OFF -A x64  -DCURL=false -DKOTLIN=true -DTEST=false -DWASM=false -DCLI=false

      - name: Build
        run: cmake --build build-windows --config Release --target c4_java

      - name: Create native-libs directory
        run: mkdir bindings\kotlin\native-libs\win32-x86-64

      - name: Copy library
        run: copy build-windows\bindings\kotlin\Release\c4_java.dll bindings\kotlin\native-libs\win32-x86-64\

      - name: Upload native-libs
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: native-libs-windows
          path: bindings/kotlin/native-libs/

  build-native-linux:
    runs-on: ubuntu-latest
    needs: generate-java-sources
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install CMake
        run: sudo apt-get install -y cmake

      - name: Configure CMake
        run: cmake -S . -B build-linux -DGENERATE_JAVA_SOURCES=OFF -DCMAKE_BUILD_TYPE=Release  -DCURL=false -DKOTLIN=true -DTEST=false -DWASM=false -DCLI=false

      - name: Build
        run: cmake --build build-linux --target c4_java

      - name: Create native-libs directory
        run: mkdir -p bindings/kotlin/native-libs/linux-x86-64

      - name: Copy library
        run: cp build-linux/bindings/kotlin/libc4_java.so bindings/kotlin/native-libs/linux-x86-64/

      - name: Upload native-libs
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: native-libs-linux
          path: bindings/kotlin/native-libs/

  build-publish-jar:
    runs-on: ubuntu-latest
    needs:
      [
        build-native-macos,
        build-native-windows,
        build-native-linux,
        generate-java-sources,
      ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download generated Java sources
        uses: actions/download-artifact@v4 # Updated to v4
        with:
          name: generated-java-sources
          path: bindings/kotlin/generated/java

      - name: Download native-libs-macos
        uses: actions/download-artifact@v4 # Updated to v4
        with:
          name: native-libs-macos
          path: bindings/kotlin/native-libs

      - name: Download native-libs-windows
        uses: actions/download-artifact@v4 # Updated to v4
        with:
          name: native-libs-windows
          path: bindings/kotlin/native-libs

      - name: Download native-libs-linux
        uses: actions/download-artifact@v4 # Updated to v4
        with:
          name: native-libs-linux
          path: bindings/kotlin/native-libs

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Build and publish JAR
        run: cd bindings/kotlin && ./gradlew -b build-jar.gradle.kts build
  #      run: cd bindings/kotlin && ./gradlew -b build-jar.gradle.kts build publish -PmavenUsername=${{ secrets.MAVEN_USERNAME }} -PmavenPassword=${{ secrets.MAVEN_PASSWORD }}

  build-publish-aar:
    runs-on: ubuntu-latest
    needs: generate-java-sources
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download generated Java sources
        uses: actions/download-artifact@v4
        with:
          name: generated-java-sources
          path: bindings/kotlin/generated/java

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Install Android SDK and NDK
        run: |
          # Install command-line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d $ANDROID_HOME
          rm cmdline-tools.zip
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          mv $ANDROID_HOME/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/

          # Set environment variables
          echo "ANDROID_HOME=/home/runner/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=/home/runner/android-sdk" >> $GITHUB_ENV
          echo "PATH=$PATH:/home/runner/android-sdk/cmdline-tools/latest/bin:/home/runner/android-sdk/platform-tools" >> $GITHUB_PATH

          # Install SDK components (API 33) and NDK 23.1.7779620
          yes | sdkmanager --sdk_root=$ANDROID_HOME "platforms;android-33" "build-tools;33.0.0" "ndk;23.1.7779620"

      - name: Build and publish AAR
        run: cd bindings/kotlin && ./gradlew -b build-aar.gradle.kts build publish -PmavenUsername=${{ secrets.MAVEN_USERNAME }} -PmavenPassword=${{ secrets.MAVEN_PASSWORD }} --stacktrace
