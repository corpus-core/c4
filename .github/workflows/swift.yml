name: Swift Pipeline

on:
  push:
    branches: ["main", "dev"]
    tags: ["v*"]
  pull_request:
    branches: ["main", "dev"]

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install CMake
        run: brew install cmake

      - name: Build x86_64 (Simulator)
        run: |
          cmake -DSWIFT=true -B build_x86 -DCMAKE_OSX_ARCHITECTURES=x86_64 .
          cd build_x86
          make
          cd ..

      - name: Build arm64 (Device)
        run: |
          cmake -DSWIFT=true -DCMAKE_OSX_ARCHITECTURES=arm64 -DSWIFT_X86_BUILD=$(pwd)/build_x86 -B build .
          cd build
          make
          cd ..

      - name: Prepare Swift Package
        run: |
          mkdir -p swift_package
          cp -r bindings/swift/* swift_package/
          cp -r build/c4_swift.xcframework swift_package/
          rm -rf swift_package/CMakeLists.txt

          # Update Package.swift to use local XCFramework
          sed -i '' "s|path: \".*xcframework\"|path: \"c4_swift.xcframework\"|" swift_package/Package.swift

      - name: Run Tests
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd swift_package
          swift test

      - name: Upload Swift Package
        uses: actions/upload-artifact@v4
        with:
          name: swift_package
          path: swift_package

      # Release steps only run on tag pushes
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            swift_package
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Swift Package Repository
        run: |
          # Clone the Swift package repository
          git clone https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/corpus-core/colibri-stateless-swift.git

          # Copy updated files
          cp -r swift_package/* colibri-stateless-swift/

          # Update version in Package.swift for release
          # VERSION=${GITHUB_REF#refs/tags/v}
          cd colibri-stateless-swift

          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Commit and push changes
          git add .
          git commit -m "Release ${VERSION}"
          #git tag "v${VERSION}"
          git push origin main --tags
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
